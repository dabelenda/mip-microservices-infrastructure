---

- hosts: managed
  become: yes
  vars_files:
    - "{{ play_dir }}/vars/common.yml"
    - "{{ play_dir }}/vars/versions.yml"
    - "{{ play_dir }}/vars/infrastructure/endpoints.yml"
    - "{{ play_dir }}/vars/algorithm-factory/endpoints.yml"
    - "{{ play_dir }}/vars/data-factory/endpoints.yml"
    - "{{ play_dir }}/vars/hospital-database/endpoints.yml"
    - "{{ play_dir }}/vars/infrastructure/endpoints.yml"
    - "{{ play_dir }}/vars/reference/endpoints.yml"
    - "{{ play_dir }}/vars/web-analytics/endpoints.yml"
    - "{{ play_dir }}/vars/infrastructure/firewall.yml"

  pre_tasks:

    - name: "Install ipset package"
      package:
        name: ipset
        state: installed
    
    - name: "create ipset fact for containing all members of the cluster"
      set_fact:
        firewall_rules: "{{ firewall_rules|default(['iptables -N DOCKER-USER', 'ipset destroy clustermembers', 'ipset create clustermembers hash:ip hashsize 4096']) + ['ipset add clustermembers ' + item|string] }}"
      with_items:
        - "{{ firewall_host_ips | default([]) }}"
    
    - name: "set facts for firewall (internal services) port"
      set_fact:
        firewall_rules: "{{ firewall_rules + [ 'iptables -A INPUT -p tcp --dport ' + item|string + ' -m set --match-set clustermembers src -j ACCEPT', 'iptables -A INPUT -p tcp --dport ' + item|string + ' -i docker0 -j ACCEPT', 'iptables -A INPUT -p udp --dport ' + item|string + ' -m set --match-set clustermembers src -j ACCEPT', 'iptables -A INPUT -p udp --dport ' + item|string + ' -i docker0 -j ACCEPT' ] }}"
      with_items:
        - "{{ firewall_internal_ports | default([]) }}"
    
    - name: "set facts for firewall (swarm clustering) port"
      set_fact:
        firewall_rules: "{{ firewall_rules + [ 'iptables -I INPUT -p tcp --dport ' + item|string + ' -j ACCEPT', 'iptables -A INPUT -p udp --dport ' + item|string + ' -j ACCEPT' ] }}"
      with_items:
        - "{{ infrastructure_swarm_ports | default([]) }}"
      when: firewall_swarm_enabled | default(false) | bool
    
    - name: "do not accept connections from hosts not member of the cluster"
      set_fact:
        firewall_rules: "{{ firewall_rules + ['iptables -I DOCKER-USER -p tcp -m set ! --match-set clustermembers src --dport ' + item|string + ' -j DROP' ] }}"
      with_items:
        - "{{ firewall_container_exposed_ports | default([]) }}"
    
    #- name: "debug"
    #  debug:
    #    msg: "{{ firewall_rules }}"
    
  roles:

    # setup firewall
    - role: firewall
      vars:
        firewall_state: started
        firewall_enabled_at_boot: true
        firewall_allowed_tcp_ports: "{{ firewall_public_ports }}"
        firewall_additional_rules: "{{ firewall_rules  }}" # fact generated in firewall_setfacts
        firewall_disable_firewalld: true
        firewall_disable_ufw: true
      when: manage_firewall | default(true)
      tags: ['infra', 'infrastructure', 'runtimes', 'firewall']

